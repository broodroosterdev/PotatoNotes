def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '3'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.potatoproject.notes"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "app"
    productFlavors {
        def debugSigning = signingConfigs.debug
        def releaseSigning = signingConfigs.release
        
        dev {
            signingConfig debugSigning
            applicationId = "com.potatoproject.notes.dev"
            dimension "app"
            manifestPlaceholders = [
                label: "Notes Dev",
                icon: "@drawable/ic_launcher_debug",
            ]
        }
        
        ci {
            signingConfig debugSigning
            applicationId = "com.potatoproject.notes.ci"
            dimension "app"
            manifestPlaceholders = [
                label: "Notes CI",
                icon: "@drawable/ic_launcher_ci",
            ]
        }
        
        production {
            signingConfig releaseSigning
            applicationId = "com.potatoproject.notes"
            dimension "app"
            manifestPlaceholders = [
                label: "Notes",
                icon: "@drawable/ic_launcher",
            ]
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation("androidx.core:core:1.0.2")
    implementation("androidx.annotation:annotation:1.0.2")
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
